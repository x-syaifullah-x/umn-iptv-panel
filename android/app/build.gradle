def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty("flutter.sdk")
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

apply plugin: "com.android.application"
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    namespace "com.example.test"

    compileSdkVersion build_versions.compile_sdk
    ndkVersion "$vNdkVersion"
    buildToolsVersion build_versions.build_tools

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    defaultConfig {
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion build_versions.compile_sdk
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        resConfigs "en"
    }

    signingConfigs {
       def home_dir = System.getProperty("user.home")
       def store_file = file("debug.keystore")
       def store_password = "android"
       def key_alias = "androiddebugkey"
       def key_password = "android"

       release {
           storeFile store_file
           storePassword store_password
           keyAlias key_alias
           keyPassword key_password
       }
   }

    buildTypes {
        release {
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            minifyEnabled true
            debuggable false
            jniDebuggable false
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source "../.."
}

dependencies {
    
}
